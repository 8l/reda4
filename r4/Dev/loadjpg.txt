| JPG decoder
| PHREDA 2015
|-----------------------
#imem
#emem

#imgrows
#imgcols

#restart
#DCTables
#ACTables
#QTables
#Image.SamplesY
#Image.QuantTableY
#Image.SamplesCbCr
#Image.QuantTableCbCr

#JPGZig1 (
   0 0 1 2 1 0 0 1 2 3 4 3 2 1 0 0 1 2 3 4 5 6 5 4 3 2 1 0 0 1 2 3
   4 5 6 7 7 6 5 4 3 2 1 2 3 4 5 6 7 7 6 5 4 3 4 5 6 7 7 6 5 6 7 7 )

#JPGZig2 (
   0 1 0 0 1 2 3 2 1 0 0 1 2 3 4 5 4 3 2 1 0 0 1 2 3 4 5 6 7 6 5 4
   3 2 1 0 1 2 3 4 5 6 7 7 6 5 4 3 2 3 4 5 6 7 7 6 5 4 5 6 7 7 6 7 )

#aanscales | /* precomputed values scaled up by 14 bits */
   16384  22725  21407  19266  16384  12873   8867   4520
   22725  31521  29692  26722  22725  17855  12299   6270
   21407  29692  27969  25172  21407  16819  11585   5906
   19266  26722  25172  22654  19266  15137  10426   5315
   16384  22725  21407  19266  16384  12873   8867   4520
   12873  17855  16819  15137  12873  10114   6967   3552
    8867  12299  11585  10426   8867   6967   4799   2446
    4520   6270   5906   5315   4520   3552   2446   1247

:get8 | adr -- adr+ 8b
	c@+ $ff and ;
:get16 | adr -- adr+ 16b
	c@+ $ff and 8 << swap c@+ $ff and rot or ;
:readNumber | adr -- adr+ 16b
	2+ get16 ;
:readComm | adr -- adr+
	get16 2 - ( 1? )( 1- swap 1+ swap ) drop ;

:getcase1
	swap
	get8 dup 15 and swap 4 >> * 'Image.SamplesY !
	get8 'Image.QuantTableY !
	swap ;

:getcase2
	swap
	get8 dup 15 and swap 4 >> * 'Image.SamplesCbCr !
	get8 'Image.QuantTableCbCr !
	swap ;

:JPGGetImageAttr | adr -- adr+
	2+	| Length of segment
	1+	| Data precision
	get16 'imgrows !
	get16 'imgcols !
	get8	| Number of components
	( 1? )( swap
		get8
		1- 0? ( getcase1 )( getcase2 )
		drop swap 1- ) drop ;

|----------------------------------
#HuffAmount )( 68

:gethuff | t a -- t a total
	'HuffAmout 4+ >r
	16 0 ( swap 1? )( 1- swap rot	| cnt sum ad
		get8 dup r!+
		rot +		| cnt a sum
		rot swap ) drop
	rdrop ;

:getDCtable | a t -- a
	swap
	gethuff
	;
:getAtable | a t -- a
	swap
	gethuff
	;

:JPGGetHuffTables
	get16 ( 1? )( swap
		get8
		$10 nand? ( getDCtable )( getAtable )
		drop
		swap 1- ) drop ;

|-----------------
:buildimg
	;

:decodetype | adr v -- adr
	$ffc0 =? ( drop JPGGetImageAttr ; )
	$ffc1 =? ( drop JPGGetImageAttr ; )
|	$ffc2 =? ( drop FH.get FH.YX setout ; )
	$ffc4 =? ( drop JPGGetHuffTables ; )
	$ffdb =? ( drop PGGetQuantTables ; )
	$ffdd =? ( drop readNumber 'Restart ! ; )
	$ffda =? ( drop JPGGetSOS 0 ; )
	$fffe =? ( drop readComm ; )
	$ffe0 >=? ( $ffef <=? ( drop readComm ; ) )
	2drop 0 0 ;

:loadjpg | "" -- adr/0
	here swap load
	here =? ( drop 0 ; ) drop
	here dup 'imem !
	get16 $ffd8 <>? ( 2drop 0 ; ) drop
	0 'DCTables !
	0 'ACTables !
	0 'QTables !
	( get16 decodetype 0? ) drop
	0? ( ; )
	buildimg ;
