| Simple RLE
| PHREDA 2015
| 0XX XX+1.lit
| 1XX DD XX.cpy from HERE-DD
|------------------
^r4/lib/gui.txt
^r4/lib/trace.txt

#menor
#lugar

:found | act actf v0 b -- act actf v0 b
	pick3 4+ over 4+
	( c@+ rot c@+ rot - 0? )( drop ) 2drop
	pick4 - | act actf v0 b cnt
	menor >? ( 'menor ! dup 'lugar ! ; )
	drop
	;

:searchbyte | ini cnt act -- ini cnt act
	pick2 =? ( c@+ ,c  ; )
	0 'menor !
	dup 128 - pick3 max	| ini cnt act actf
	over @ pick2 1-		| ini cnt act actf v0 b
	( pick2 >? )(
		dup @ pick2 =? ( drop found )( drop )
		1- ) 3drop
	menor 0? ( drop c@+ ,c ; )
	rot over 1- - rot rot
	( 257 >? )(
		lugar over - ,c $ff ,c
		258 'lugar +! 258 - )
	lugar over - ,c ,c
	;

:compress | src cnt -- src+ value
	here >r
	over swap 		| ini act cnt
	( 1? )( swap	| ini cnt act
		searchbyte
		swap 1- ) 3drop
	r> ;

|---------------- decompress
:cpy | dd xx --
	$7f and 2 +
	here rot -
	( swap 1? )( 1- swap c@+ ,c )
	2drop ;

:decompress | end ini --
	( over <? )(
		c@+ -? ( swap c@+ rot cpy )( 1+ ( 1? )( 1- swap c@+ ,c ) drop )
		) 2drop ;

|------------------
#m1 #m1>
#m2	#m2>

:filla
	m1 1000 ( 1? )( 1- 65 rot c!+ swap ) drop 'm1> ! ;

:fillr
	m1 1000 ( 1? )( 1- rand 6 >> rot c!+ swap ) drop 'm1> ! ;

:dumpl |
	( over <? )( c@+ emit ) 2drop ;

:testcomp
	m1 1000 compress
	'm2 !
	;

:main
	mark
	here dup 'm1 !
	$ffff +
	dup 'm2 !
	'here !
	filla
	show clrscr
		m1> m1 - "%d bytes" print cr
		m1> m1 dumpl cr
		here m2 - "%d bytes" print cr
		here m2 dumpl cr

		'testcomp <f1>
		'exit >esc<
		cminiflecha ;

: main ;